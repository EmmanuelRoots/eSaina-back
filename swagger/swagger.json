{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserDTO": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"roleId": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"phoneNumber": {
						"type": "string"
					},
					"birthDate": {
						"type": "string",
						"nullable": true
					},
					"active": {
						"type": "boolean"
					}
				},
				"required": [
					"email",
					"lastName",
					"firstName",
					"phoneNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginDTO": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"deviceInfo": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GoogleLoginDTO": {
				"properties": {
					"email": {
						"type": "string"
					},
					"family_name": {
						"type": "string"
					},
					"given_name": {
						"type": "string"
					},
					"deviceInfo": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"family_name",
					"given_name"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "esaina_back",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/user/subscribe": {
			"post": {
				"operationId": "Subscribe",
				"responses": {
					"200": {
						"description": "Les informations de l'utilisateur créé et un jeton d'authentification",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"properties": {
												"data": {},
												"message": {
													"type": "string"
												},
												"statusCode": {
													"type": "number",
													"format": "double"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"message",
												"statusCode",
												"success"
											],
											"type": "object"
										},
										{
											"properties": {
												"message": {},
												"data": {
													"type": "string"
												},
												"statusCode": {
													"type": "number",
													"format": "double"
												},
												"success": {
													"type": "boolean"
												}
											},
											"required": [
												"data",
												"statusCode",
												"success"
											],
											"type": "object"
										}
									]
								}
							}
						}
					},
					"201": {
						"description": "Utilisateur inscrit avec succès"
					},
					"400": {
						"description": "Données invalides"
					},
					"409": {
						"description": "L'utilisateur existe déjà"
					}
				},
				"description": "Inscrit un nouvel utilisateur dans le système.\n\nCet endpoint permet de créer un nouveau compte utilisateur avec\nles informations fournies. Une fois inscrit, l'utilisateur pourra\nse connecter au système et accéder aux fonctionnalités correspondant\nà son niveau d'autorisation.",
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Les données de l'utilisateur à inscrire",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserDTO",
								"description": "Les données de l'utilisateur à inscrire"
							},
							"example": {
								"email": "utilisateur@example.com",
								"firstName": "Jean",
								"lastName": "Dupont",
								"password": "MotDePasse123!",
								"phoneNumber": "+33123456789",
								"role": "utilisateur"
							}
						}
					}
				}
			}
		},
		"/user/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Les informations de l'utilisateur et un jeton d'authentification",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"properties": {
												"refreshToken": {
													"type": "string"
												},
												"accessToken": {
													"type": "string"
												}
											},
											"required": [
												"refreshToken",
												"accessToken"
											],
											"type": "object"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Identifiants invalides"
					},
					"403": {
						"description": "Compte désactivé"
					}
				},
				"description": "Authentifie un utilisateur existant.\n\nCet endpoint permet à un utilisateur de se connecter au système en\nfournissant ses identifiants (email et mot de passe). En cas de succès,\nun jeton d'authentification est généré et retourné pour les requêtes\nultérieures.",
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Les identifiants de connexion de l'utilisateur",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginDTO",
								"description": "Les identifiants de connexion de l'utilisateur"
							},
							"example": {
								"email": "utilisateur@example.com",
								"password": "MotDePasse123!"
							}
						}
					}
				}
			}
		},
		"/user/googleLogin": {
			"post": {
				"operationId": "GoogleLogin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"properties": {
												"refreshToken": {
													"type": "string"
												},
												"accessToken": {
													"type": "string"
												}
											},
											"required": [
												"refreshToken",
												"accessToken"
											],
											"type": "object"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/GoogleLoginDTO"
							}
						}
					}
				}
			}
		},
		"/user/refresh": {
			"post": {
				"operationId": "Refresh",
				"responses": {
					"200": {
						"description": "Un nouveau access token et un nouveau refresh token",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"refreshToken": {
											"type": "string"
										},
										"accessToken": {
											"type": "string"
										}
									},
									"required": [
										"refreshToken",
										"accessToken"
									],
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Refresh token invalide ou expiré"
					}
				},
				"description": "Génère un nouveau jeton d'accès à l'aide d'un refresh token valide.\n\nCet endpoint permet de prolonger la session d'un utilisateur sans\navoir à se reconnecter. Le refresh token fourni doit être valide\net non expiré. Une fois utilisé, il est révoqué (rotation du token).",
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Le refresh token actuel",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"refreshToken": {
										"type": "string"
									}
								},
								"required": [
									"refreshToken"
								],
								"type": "object",
								"description": "Le refresh token actuel"
							},
							"example": {
								"refreshToken": "ancien_refresh_token_12345"
							}
						}
					}
				}
			}
		},
		"/user/me": {
			"get": {
				"operationId": "GetUserFromProfile",
				"responses": {
					"200": {
						"description": "Les données du profil utilisateur",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"data",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Récupère les informations du profil de l'utilisateur connecté.\n\nCet endpoint renvoie les données du profil de l'utilisateur authentifié,\nextraites directement du token JWT décodé par le middleware d'authentification.\nAucune donnée supplémentaire n'est requise dans la requête : l'identité de\nl'utilisateur est déduite du token d'accès fourni dans l'en-tête `Authorization`.",
				"tags": [
					"user"
				],
				"security": [],
				"parameters": []
			}
		},
		"/user/logout": {
			"post": {
				"operationId": "LogOut",
				"responses": {
					"200": {
						"description": "Un message de confirmation de déconnexion",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"message",
										"success"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Invalide un refresh token et met fin à la session utilisateur.\n\nCet endpoint permet à un utilisateur de se déconnecter proprement en révoquant\nson refresh token actuel. Une fois appelé, ce token ne peut plus être utilisé\npour générer de nouveaux access tokens, même s’il n’est pas encore expiré.",
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Le refresh token à révoquer",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"refreshToken": {
										"type": "string"
									}
								},
								"required": [
									"refreshToken"
								],
								"type": "object",
								"description": "Le refresh token à révoquer"
							},
							"example": {
								"refreshToken": "refresh_token_à_révoquer_12345"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}